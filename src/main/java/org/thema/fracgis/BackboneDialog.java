/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BackboneDialog.java
 *
 * Created on 26 janv. 2010, 15:06:07
 */

package org.thema.fracgis;

import com.vividsolutions.jts.geom.Coordinate;
import com.vividsolutions.jts.geom.GeometryFactory;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ProgressMonitor;
import org.geotools.graph.structure.Edge;
import org.geotools.graph.structure.Node;
import org.thema.drawshape.GeometryDrawableShape;
import org.thema.drawshape.PanelMap.ShapeMouseListener;
import org.thema.drawshape.SelectableShape;
import org.thema.drawshape.feature.Feature;
import org.thema.drawshape.layer.DefaultGroupLayer;
import org.thema.drawshape.layer.DefaultLayer;
import org.thema.drawshape.layer.FeatureLayer;
import org.thema.drawshape.style.PointStyle;
import org.thema.drawshape.ui.MapViewer;
import org.thema.graph.SpatialGraph;
import org.thema.graph.Util;
import org.thema.graph.pathfinder.DijkstraPathFinder;
import org.thema.graph.pathfinder.Path;


/**
 *
 * @author gvuidel
 */
public class BackboneDialog extends javax.swing.JDialog implements ShapeMouseListener{

    MapViewer mapViewer;

    List<Feature> shortestPathFeatures;
    List<Feature> otherPathFeatures;

    /** Creates new form BackboneDialog */
    public BackboneDialog(java.awt.Frame parent, MapViewer map) {
        super(parent, false);
        initComponents();
        
        mapViewer = map;
        setLocationRelativeTo(parent);
        getRootPane().setDefaultButton(okButton);

        LayerModel model = new LayerModel(map.getLayers(), SpatialGraphLayer.class);
        if(model.getSize() == 0) {
            JOptionPane.showMessageDialog(parent, "No network layer.");
            throw new IllegalArgumentException("No network layer.");
        }
        netComboBox.setModel(model);
        netComboBox.setSelectedIndex(0);

        mapViewer.getMap().addShapeMouseListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        netComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        y1TextField = new javax.swing.JTextField();
        x1TextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        y2TextField = new javax.swing.JTextField();
        x2TextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Backbone...");
        setAlwaysOnTop(true);

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Network layer");

        jLabel3.setText("Starting point");

        jLabel4.setText("X");

        jLabel5.setText("Y");

        y1TextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        x1TextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        jLabel6.setText("Ending point");

        jLabel7.setText("X");

        jLabel8.setText("Y");

        y2TextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        x2TextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(y1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(netComboBox, 0, 178, Short.MAX_VALUE))
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(y2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(x2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(netComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(y1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(x2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(y2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();

        mapViewer.getMap().removeShapeMouseListener(this);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        final double x1 = Double.parseDouble(x1TextField.getText());
        final double y1 = Double.parseDouble(y1TextField.getText());
        final double x2 = Double.parseDouble(x2TextField.getText());
        final double y2 = Double.parseDouble(y2TextField.getText());
        final SpatialGraph graph = new SpatialGraph(((SpatialGraphLayer) netComboBox.getSelectedItem()).getSpatialGraph());
        setVisible(false);
        dispose();

        mapViewer.getMap().removeShapeMouseListener(this);

        

        new Thread(new Runnable() {

            public void run() {
                ProgressMonitor monitor = new ProgressMonitor(BackboneDialog.this, "Backbone", "", 0, 100);

                graph.setSnapToEdge(false);
                Node node1 = (Node)graph.getLocation(new GeometryFactory().createPoint(new Coordinate(x1, y1))).getGraphElem();
                Node node2 = (Node)graph.getLocation(new GeometryFactory().createPoint(new Coordinate(x2, y2))).getGraphElem();
                monitor.setProgress(1);
                monitor.setNote("Calc shortest paths...");
                // On calcule le chemin le plus court
                Path path = graph.getPath(node1, node2, DijkstraPathFinder.DIST_WEIGHTER);

                monitor.setProgress(2);
                if(path == null) {
                    JOptionPane.showMessageDialog(BackboneDialog.this, "No path exist between the two nodes.");
                    return;
                }

                monitor.setNote("Calc other paths...");
                HashSet shortEdges = new HashSet(path.getEdges());
                // puis on cherche tous les autres chemins possibles
                HashSet selEdges = new HashSet(shortEdges);
                for(Object o : graph.getGraph().getNodes())
                    ((Node)o).setCount(0);
                HashSet<Node> nodes = new HashSet<Node>();
                HashSet<Node> newNodes = new HashSet<Node>();
                for(Node n : path.getNodes()) {
                    n.setCount(1);
                    newNodes.add(n);
                }

                HashSet newEdges = new HashSet();

                while(newNodes.size() > 0) {
                    nodes.addAll(newNodes);
                    newNodes.clear();

                    for(Node n1 : nodes) {
                        DijkstraPathFinder finder = new DijkstraPathFinder(graph.getGraph(), n1, DijkstraPathFinder.NBEDGE_WEIGHTER);
                        finder.calculate();

                        for(Node n2 : nodes) {
                            path = finder.getPath(n2);
                            if(path == null || n1 == n2)
                                continue;

                            for(Node n : path.getNodes()) {
                                if(n.getCount() == 0) {
                                    n.setCount(1);
                                    newNodes.add(n);
                                }
                            }

                            newEdges.addAll(path.getEdges());

                        }

                        for(Object e : newEdges) {
                            ((Edge)e).getNodeA().remove((Edge) e);
                            ((Edge)e).getNodeB().remove((Edge) e);
                        }
                        selEdges.addAll(newEdges);
                        newEdges.clear();
                    }

                    // on supprimer les noeuds inutiles
                    Iterator<Node> it = nodes.iterator();
                    while(it.hasNext()) {
                        boolean close = true;
                        Iterator itn = it.next().getRelated();
                        while(itn.hasNext())
                            if(((Node)itn.next()).getCount() == 0)
                                close = false;
                        if(close)
                            it.remove();
                    }

                }

                DefaultGroupLayer gl = new DefaultGroupLayer("Backbone");

                // create layers & features
                otherPathFeatures = new ArrayList<Feature>();
                for(Object e : selEdges)
                    otherPathFeatures.add((Feature)((Edge)e).getObject());

                gl.addLayerFirst(new FeatureLayer("All paths", otherPathFeatures));

                shortestPathFeatures = new ArrayList<Feature>();
                for(Object e : shortEdges)
                    shortestPathFeatures.add((Feature)((Edge)e).getObject());

                gl.addLayerFirst(new FeatureLayer("Shortest path", shortestPathFeatures));

                gl.addLayerFirst(new DefaultLayer("Points",
                        Arrays.asList(new GeometryDrawableShape(Util.getGeometry(node1), new PointStyle(Color.RED, 3)),
                        new GeometryDrawableShape(Util.getGeometry(node2), new PointStyle(Color.RED, 3)))));

                ((DefaultGroupLayer)mapViewer.getLayers()).addLayerFirst(gl);
            }
        }).start();

        
    }//GEN-LAST:event_okButtonActionPerformed

    public void mouseClicked(Point2D p, List<SelectableShape> shapes, MouseEvent sourceEvent, int cursorMode) {
        x2TextField.setText(x1TextField.getText());
        y2TextField.setText(y1TextField.getText());
        x1TextField.setText(""+p.getX());
        y1TextField.setText(""+p.getY());
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox netComboBox;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField x1TextField;
    private javax.swing.JTextField x2TextField;
    private javax.swing.JTextField y1TextField;
    private javax.swing.JTextField y2TextField;
    // End of variables declaration//GEN-END:variables


}
