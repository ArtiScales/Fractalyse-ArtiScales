/*
 * Copyright (C) 2018 Laboratoire ThéMA - UMR 6049 - CNRS / Université de Franche-Comté
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.thema.fracgis.method.network;

import com.vividsolutions.jts.geom.Coordinate;
import com.vividsolutions.jts.geom.GeometryFactory;
import java.util.Collection;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.geotools.graph.structure.Edge;
import org.geotools.graph.structure.Graph;
import org.thema.data.feature.DefaultFeatureCoverage;
import org.thema.data.feature.Feature;
import org.thema.drawshape.PanelMap;
import org.thema.drawshape.layer.GroupLayer;
import org.thema.drawshape.ui.MapViewer;
import org.thema.fracgis.LayerModel;
import org.thema.fracgis.SpatialGraphLayer;
import org.thema.fracgis.method.network.mono.MonoNetworkMethod;
import org.thema.fracgis.sampling.DefaultSampling;
import org.thema.graph.SpatialGraph;
import org.thema.graph.pathfinder.DijkstraPathFinder;
import org.thema.graph.pathfinder.EdgeWeighter;

/**
 *
 * @author Gilles Vuidel
 */
public class NetworkMethodPanel extends javax.swing.JPanel {

    public SpatialGraphLayer layer;
    public String distField;
    public String massField;
    public boolean edgeField;
    public DefaultSampling sampling;
    
    /**
     * Creates new form NetworkMethodPanel
     */
    public NetworkMethodPanel() {
        initComponents();
    }

    /** 
     * Sets the network layers
     * @param layers the loaded layers
     */
    public void setLayers(LayerModel<SpatialGraphLayer> model) {
        if(model.getSize() == 0) {
            JOptionPane.showMessageDialog(this, "No network layer.");
            throw new IllegalArgumentException("No network layer.");
        }
        netComboBox.setModel(model);
        netComboBoxActionPerformed(null);
    }
    
    public void validateInput() {
        layer = (SpatialGraphLayer)netComboBox.getSelectedItem();
        distField = (String) distFieldComboBox.getSelectedItem();
        massField = distRadioButton.isSelected() ? MonoNetworkMethod.DIST_MASS : massFieldComboBox.getSelectedItem().toString();
        edgeField = !nodeRadioButton.isSelected();
        sampling = samplingPanel.getSampling();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        distFieldComboBox = new javax.swing.JComboBox<>();
        netComboBox = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        distRadioButton = new javax.swing.JRadioButton();
        nodeRadioButton = new javax.swing.JRadioButton();
        edgeRadioButton = new javax.swing.JRadioButton();
        massFieldComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        samplingPanel = new org.thema.fracgis.sampling.SamplingPanel();
        samplingButton = new javax.swing.JButton();

        jLabel6.setText("Distance");

        netComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netComboBoxActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mass"));

        distRadioButton.setSelected(true);
        distRadioButton.setText("Distance");
        distRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distRadioButtonmassRadioButtonActionPerformed(evt);
            }
        });

        nodeRadioButton.setText("Node");
        nodeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distRadioButtonmassRadioButtonActionPerformed(evt);
            }
        });

        edgeRadioButton.setText("Edge");
        edgeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distRadioButtonmassRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(distRadioButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nodeRadioButton)
                            .addComponent(edgeRadioButton))
                        .addGap(33, 33, 33)
                        .addComponent(massFieldComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(distRadioButton)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nodeRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edgeRadioButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(massFieldComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
        );

        jLabel2.setText("Network layer");

        samplingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sampling"));

        samplingButton.setText("Estimate sampling");
        samplingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samplingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(samplingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(samplingButton)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel6)))
                            .addGap(19, 19, 19)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(distFieldComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(netComboBox, 0, 213, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGap(14, 14, 14)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(samplingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(samplingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(netComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(distFieldComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(203, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void netComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netComboBoxActionPerformed
        Feature f = ((SpatialGraphLayer)netComboBox.getSelectedItem()).getEdgeLayer().getFeatures().iterator().next();
        DefaultComboBoxModel model = new DefaultComboBoxModel(f.getAttributeNames().toArray());
        model.insertElementAt(MonoNetworkMethod.NO_WEIGHT, 0);
        model.insertElementAt(MonoNetworkMethod.LENGTH_WEIGHT, 1);
        distFieldComboBox.setModel(model);

        distRadioButtonmassRadioButtonActionPerformed(evt);

    }//GEN-LAST:event_netComboBoxActionPerformed

    private void distRadioButtonmassRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distRadioButtonmassRadioButtonActionPerformed
        DefaultComboBoxModel model;
        if(distRadioButton.isSelected()) {
            model = new DefaultComboBoxModel();
        } else if(edgeRadioButton.isSelected()) {
            Feature f = ((SpatialGraphLayer)netComboBox.getSelectedItem()).getEdgeLayer().getFeatures().iterator().next();
            model = new DefaultComboBoxModel(f.getAttributeNames().toArray());
        } else {
            Feature f = ((SpatialGraphLayer)netComboBox.getSelectedItem()).getNodeLayer().getFeatures().iterator().next();
            model = new DefaultComboBoxModel(f.getAttributeNames().toArray());
        }
        massFieldComboBox.setModel(model);
    }//GEN-LAST:event_distRadioButtonmassRadioButtonActionPerformed

    private void samplingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samplingButtonActionPerformed
        SpatialGraph network = ((SpatialGraphLayer)netComboBox.getSelectedItem()).getSpatialGraph();
        double min = Double.MAX_VALUE;
        EdgeWeighter weighter = MonoNetworkMethod.getWeighter((String) distFieldComboBox.getSelectedItem());
        for(Edge e : (Collection<Edge>)network.getGraph().getEdges()) {
            double w = weighter.getWeight(e);
            if(w < min) {
                min = w;
            }
        }
        double max = 0;
        Coordinate c = new DefaultFeatureCoverage(network.getEdges()).getEnvelope().centre();
        DijkstraPathFinder finder = network.getPathFinder(new GeometryFactory().createPoint(c), weighter);
        for(DijkstraPathFinder.DijkstraNode n : finder.getComputedNodes()) {
            if(n.cost > max) {
                max = n.cost;
            }
        }
        samplingPanel.setSizes(min, max);
    }//GEN-LAST:event_samplingButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> distFieldComboBox;
    private javax.swing.JRadioButton distRadioButton;
    private javax.swing.JRadioButton edgeRadioButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> massFieldComboBox;
    private javax.swing.JComboBox netComboBox;
    private javax.swing.JRadioButton nodeRadioButton;
    private javax.swing.JButton samplingButton;
    private org.thema.fracgis.sampling.SamplingPanel samplingPanel;
    // End of variables declaration//GEN-END:variables
}
